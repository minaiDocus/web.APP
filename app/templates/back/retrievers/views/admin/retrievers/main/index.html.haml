#retrievers  
  .row.box.clearfix.derivationLeft
    .col-md-3.p-2  
      %h3 Automates de récupérations

    .col-md-7.text-center.semibold.p-2
      = link_to admin_retrievers_path do
        %span.badge.bg-dark Tous
      = link_to admin_retrievers_path(retriever_contains: { created_at: { '>=' => Time.now.beginning_of_month.strftime('%Y-%m-%d') } }, per_page: params[:per_page]) do
        %span.badge.bg-info Récent
      = link_to admin_retrievers_path(retriever_contains: { state: 'ready' }, per_page: params[:per_page]) do
        %span.badge.bg-success OK
      = link_to admin_retrievers_path(retriever_contains: { state: 'waiting_selection' }, per_page: params[:per_page]) do
        %span.badge.bg-secondary Sélection
      = link_to admin_retrievers_path(retriever_contains: { state: 'error' }, per_page: params[:per_page]) do
        %span.badge.bg-danger Erreur

    .col-md-2.text-end
      %button.btn.btn-warning.retrievers-filter.w-50
        %span.me-2= glyphicon('transfer', { size: '10', color: '#000', style: 'transform: rotate(90deg)'})
        %span Filtrer

  .row.box.clearfix.derivationRight
    .col-md-12#table_retrievers      
      %table.table.table-condensed.table-striped
        %thead
          %tr
            %th= sortable :created_at,   'Créé le'
            %th= sortable :updated_at,   'Modifié le'
            %th= sortable :user_id,      t('activerecord.models.user.name')
            %th= sortable :capabilities, t('activerecord.models.retriever.attributes.capabilities')
            %th= sortable :service_name, t('activerecord.models.retriever.attributes.service_name')
            %th= sortable :name,         t('activerecord.models.retriever.attributes.name')
            %th Journal
            %th= t('activerecord.models.retriever.attributes.state')
            %th= sortable :is_sane,      t('activerecord.models.retriever.attributes.is_sane')
            %th.text-end Action
        %tbody
          - @retrievers.each do |retriever,|
            - present retriever do |retriever_presenter|
              %tr
                %td= l(retriever.created_at, format: '%d %b %Y %H:%M')
                %td= l(retriever.updated_at, format: '%d %b %Y %H:%M')
                %td= link_to retriever.user.code, [:admin, retriever.user]
                %td= retriever_presenter.capabilities
                %td= retriever_presenter.service_name
                %td= retriever_presenter.name
                %td= retriever_presenter.journal.try(:name) || '-'
                %td!= retriever_presenter.state(:admin)
                %td= retriever.is_sane ? t('yes_value') : t('no_value')
                %td.text-end.pointer.readonly-container
                  .action.sub_edit_delete.list-collaborators
                    %span.glyph= glyphicon('ellipses', { size: '12', style: 'transform: rotate(90deg)'})
                  .sub_menu.text-start.hide
                    %ul.no-margin.no-padding.regular
                      %li
                        = link_to retrievers_path(user_code: retriever.user.code), {target: '_blank'} do
                          %span.me-2= glyphicon('eye', size: 12)
                          %span Voir
      = render file: Rails.root.join('app/views/shared/_pagination.html.haml'), locals: { url: admin_retrievers_path, target: '#table_retrievers', total_pages: @retrievers.total_pages, filter: 'form-filter' }

      .modal#filter-retriever
        .modal-dialog
          .modal-content
            .modal-header.clearfix
              %h5.modal-title.bold Filtrer
              %button.btn-close{'aria-label' => 'Close', 'data-bs-dismiss' => 'modal', :type => 'button'}
            = form_tag admin_retrievers_path, method: :get, class: 'form-filter' do
              = hidden_field_tag :direction, sort_direction
              = hidden_field_tag :sort, sort_column
              = hidden_field_tag :per_page, per_page
              .modal-body
                .dain
                  .koatity
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[created_at]', 'Créé le'
                      .control-section
                        = text_field_tag 'retriever_contains[created_at]', (params[:retriever_contains][:created_at] rescue ''), class: 'form-control daterange'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[updated_at]', 'Modifié le'
                      .control-section
                        = text_field_tag 'retriever_contains[updated_at]', (params[:retriever_contains][:updated_at] rescue ''), class: 'form-control daterange'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[user_code]', t('activerecord.models.user.name')
                      .control-section
                        = text_field_tag 'retriever_contains[user_code]', (params[:retriever_contains][:user_code] rescue ''), class: 'input-small'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[capabilities]', t('activerecord.models.retriever.attributes.capabilities')
                      .control-section
                        = select_tag 'retriever_contains[capabilities]', options_for_select([['Document', :document], ['Op. Bancaire', :bank], ['Doc. et Op. Bancaires', :both]], (params[:retriever_contains][:capabilities] rescue '')), include_blank: true, class: 'input-small'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[service_name]', t('activerecord.models.retriever.attributes.service_name')
                      .control-section
                        = text_field_tag 'retriever_contains[service_name]', (params[:retriever_contains][:service_name] rescue ''), class: 'input-small'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[name]', t('activerecord.models.retriever.attributes.name')
                      .control-section
                        = text_field_tag 'retriever_contains[name]', (params[:retriever_contains][:name] rescue ''), class: 'form-control'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[state]', t('activerecord.models.retriever.attributes.state')
                      .control-section
                        = select_tag 'retriever_contains[state]', options_for_select(Retriever.state_machine.states.map { |e| [e.human_name, e.name] }, (params[:retriever_contains][:state] rescue '')), include_blank: true, class: 'input-small'
                    .form-group
                      .label-section
                        = label_tag 'retriever_contains[is_sane]', t('activerecord.models.retriever.attributes.is_sane')
                      .control-section
                        = select_tag 'retriever_contains[is_sane]', options_for_select([['Oui', 1], ['Non', 0]], (params[:retriever_contains][:is_sane] rescue '')), include_blank: true, class: 'input-small'
              .modal-footer
                .form-actions
                  = link_to "Réinitialiser", admin_retrievers_path, class: 'btn btn-light', title: t('filters.reset')
                  = submit_tag t('filters.action'), class: 'btn btn-primary'

= javascript_include_tag 'back/retrievers/assets/javascripts/main'