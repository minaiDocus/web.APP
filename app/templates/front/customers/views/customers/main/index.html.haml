= stylesheet_link_tag 'front/customers/assets/stylesheets/main'

.customers
  %input#organization_id{type: :hidden, value: @organization.id, name: 'organization_id'}
  %input#customer_id{type: :hidden, value: @customers.last&.id, name: 'customer_id'}
  .list-customers.derivationRight
    .row
      .col-md-6
        %h3.bold
          Liste des clients
          %span.badge.badge-secondary.badge-sm.regular= @customers.total_count
      .col-md-3.no-padding
        .input-group.mb-3
          %span.input-group-text#basic-addon1= glyphicon('magnifying-glass', { size: '16', color: 'background: rgba(26, 26, 26, 0.7)' })          
          %input.form-control{ type: :text, "aria-label" => "Rechercher", "aria-describedby" => "basic-addon1"  }
      .col-md-1.text-center.no-padding
        %button.btn.btn-light.customer-filter.semibold
          %span Filtrer
          %span= glyphicon('transfer', { size: '16', color: '#72AA42', style: 'transform: rotate(90deg)'})
      .col-md-2.no-padding
        - if (@user.leader? || @user.manage_customers) && @organization.is_active
          %button.btn.btn-primary.new-customer.semibold.add-edit
            %span.me-2= glyphicon('plus', { size: '15', color: '#FFFF'})
            %span Nouveau Client
          
        
    .box
      .row
        .col-md-12
          %table.table.table-striped.table_integration
            %thead
              %th Nom
              %th Identifiant
              %th Date
              %th Forfait
              %th Pré-affectation
              %th Automates
              %th Journaux sup.
              %th.text-end Action
            %tbody
              - @customers.each do |customer|
                %tr
                  %td.align-middle= customer.name
                  %td.align-middle
                    %span.info
                      = link_to customer, organization_customer_path(@organization, customer)
                  %td.align-middle= customer.created_at.strftime('%d/%m/%Y')
                  %td.align-middle
                    - period = @periods.select { |e| e.user == customer }.first
                    - if period
                      - period.product_option_orders.each do |option|
                        %span.semibold= option.group_title
                        - if option.title.present?
                          %br
                          %i= option.title
                  %td.text-center.align-middle= customer.subscription.try(:is_package?, 'pre_assignment_option') ? 'Activé' : '-'
                  %td.text-center.align-middle= customer.subscription.try(:is_package?, 'retriever_option') ? "Récupération banque +\nFactures sur Internet" : "-"
                  %td.align-middle= customer.subscription.try(:number_of_journals)
                  %td.text-end.pointer.align-middle
                    .action.sub_edit_delete.list-collaborators
                      %span.glyph= glyphicon('ellipses', { size: '15', color: 'rgba(26, 26, 26, 0.7);', style: 'transform: rotate(90deg)'})
                    .sub_menu.text-start.hide
                      %ul.no-margin.no-padding.regular
                        %li.edit.edit-customer
                          = link_to glyphicon('pencil', { size: '15', color: 'rgba(26, 26, 26, 0.7);'}) + ' Éditer', organization_customer_path(@organization, customer)
                        %li.delete.red-label
                          = link_to glyphicon('ban', { size: '15', color: "#FF4848" }) + ' Clôturer le dossier', account_close_confirm_organization_customer_path(@organization, customer)


.modal#customers-filter
  .modal-dialog
    .modal-content
      .modal-header
        %h5.modal-title.bold Filtrer les clients
        %button.btn-close{'aria-label' => 'Close', 'data-bs-dismiss' => 'modal', :type => 'button'}
      = form_tag organization_customers_path(@organization), method: :get, class: 'form-filter' do
        = hidden_field_tag :direction, sort_direction
        = hidden_field_tag :sort, sort_column
        = hidden_field_tag :per_page, per_page
        = hidden_field_tag :with_details, params[:with_details] || true
        .modal-body
          .form-group
            = label_tag 'user_contains[company]', t('activerecord.models.user.attributes.company'), class: 'col-form-label semibold'
            .select-container.no-padding.w-100
              = text_field_tag 'user_contains[company]', (params[:user_contains][:company] rescue ''), class: 'form-control filter-field'
          .form-group
            = label_tag 'user_contains[code]', t('activerecord.models.user.attributes.code'), class: 'col-form-label semibold'
            .select-container.no-padding.w-100
              = text_field_tag 'user_contains[code]', (params[:user_contains][:code] rescue ''), class: 'form-control filter-field'
          .form-group
            = label_tag 'user_contains[last_name]', t('activerecord.models.user.attributes.last_name'), class: 'col-form-label semibold'
            .select-container.no-padding.w-100
              = text_field_tag 'user_contains[last_name]', (params[:user_contains][:last_name] rescue ''), class: 'form-control filter-field'
          .form-group
            = label_tag 'user_contains[first_name]', t('activerecord.models.user.attributes.first_name'), class: 'col-form-label semibold'
            .select-container.no-padding.w-100
              = text_field_tag 'user_contains[first_name]', (params[:user_contains][:first_name] rescue ''), class: 'form-control filter-field'
          .form-group
            = label_tag 'user_contains[email]', t('activerecord.models.user.attributes.email'), class: 'col-form-label semibold'
            .select-container.no-padding.w-100
              = text_field_tag 'user_contains[email]', (params[:user_contains][:email] rescue ''), class: 'form-control filter-field'
          .form-group
            = label_tag 'group_ids[]', 'Filtrer par groupe', class: 'semibold'
            = select_tag 'group_ids[]', options_from_collection_for_select(@user.groups.order(name: :asc), :id, :name, (params[:group_ids] rescue '')), include_blank: true, class: 'form-control form-select form-select-sm filter-field', id: 'group-filter', multiple: true
          .form-group
            = label_tag 'user_contains[collaborator_id]', 'Filtrer par collaborateur', class: 'semibold'
            = select_tag 'user_contains[collaborator_id]', options_from_collection_for_select(@organization.collaborators.order(code: :asc), :id, :code, (params[:user_contains][:collaborator_id] rescue '')), include_blank: true, class: 'form-control form-select form-select-sm filter-field', id: 'collaborator-filter', multiple: false

          .form-group.row
            .col-md-10
              = label_tag 'user_contains[is_inactive]', t('activerecord.models.user.attributes.is_inactive'), class: 'semibold'
            .col-md-2.form-check.form-switch
              %label.form-check-label Non
              = check_box_tag 'user_contains[is_inactive]', 0, (params[:user_contains][:is_inactive].present? && params[:user_contains][:is_inactive] == 1 rescue false), class: "form-check-input input_switch filter-customer filter-field"

        .modal-footer
          = link_to 'Annuler', organization_customers_path(@organization), class: 'btn btn-light semibold cancel'
          = submit_tag t('filters.action'), class: 'btn btn-primary semibold btn-filter'

.modal#create-customer
  .modal-dialog
    .modal-content


= javascript_include_tag 'front/customers/assets/javascripts/main'