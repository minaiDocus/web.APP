- operation = preseizure.operation

.w-50.dynamic_box{ data: { preseizure_id: preseizure.id, type: 'operation' }}
  .box
    .row
      .col-md-10
        %h5.pack.semibold= operation.try(:label)
      .col-md-1.action-group
        %label.container.pointer
          %input{ type: :checkbox }
          %span.checkmark
            = glyphicon('check', { size: '14', color: '#FFF'})
    .row
      .col-md-5
        %span= preseizure.date.strftime('%d/%m/%Y')
        %span -         
        %span Devise :
        %span= preseizure.unit 

    .row.m-3.content-table
      %table.table
        %thead
          %th.no-border N° de compte
          %th.no-border Débit
          %th.no-border Crédit
        - accounts = preseizure.try(:accounts) || []
        - entries  = preseizure.try(:entries) || []
        %tbody
          %tr
            %td= accounts[0].try(:number) || '-'
            %td= (entries[0].try(:debit?))? entries[0].try(:amount) : '-'
            %td= (entries[0].try(:credit?))? entries[0].try(:amount) : '-'
          %tr.striped
            %td= accounts[1].try(:number) || '-'
            %td= (entries[1].try(:debit?))? entries[1].try(:amount) : '-'
            %td= (entries[1].try(:credit?))? entries[1].try(:amount) : '-'
    %hr    
    .row
      .col-md-9
        - if preseizure.created_at >= 1.days.ago
          %span.badge.badge-success Nouveau

        - delivery_state = preseizure.get_state_to('text')
        - if ['delivery_failed', 'duplication', 'piece_ignored'].include?(delivery_state)
          %span.badge.badge-danger= t("pieces.delivery_state.#{delivery_state}")
        - elsif ['awaiting_analytics', 'awaiting_pre_assignment', 'delivery_pending'].include?(delivery_state)
          %span.badge.badge-warning= t("pieces.delivery_state.#{delivery_state}")
        - elsif delivery_state != 'none'
          %span.badge.badge-success= t("pieces.delivery_state.#{delivery_state}")

        - if preseizure.third_party.present?
          %span.badge.bg-dark= preseizure.third_party
      .col-md-3.text-right
        %span.action-group.preseizures_export{title: 'Export écriture comptable', data:{ id: preseizure.id, type: 'preseizure', multi: false }}= glyphicon('cloud-download', { size: '20', color:'rgba(26, 26, 26, 0.32);'})
        - if preseizure.user.uses_api_softwares? && preseizure.is_not_delivered?
          %span.action-group.deliver_preseizures{title: 'Livraison écriture comptable', data: {ids: [preseizure.id]}}= glyphicon('loop-circular', { size: '20', color:'rgba(26, 26, 26, 0.32);', style: 'transform: rotate(90deg)'})
        %span.action-group.edit_preseizures{title: 'Edition écriture comptable', data: { id: preseizure.id }}= glyphicon('pencil', { size: '20', color:'rgba(26, 26, 26, 0.32);'})