= simple_form_for @bank_account, url: retriever_bank_update_path, html: { id: 'form-bank-params', class: 'form-horizontal label-medium' } do |f|
  = f.input :name
  = f.input :number
  = f.input :bic
  = f.input :journal
  - if @account.uses?(:ibiza)
    - if @account.organization.ibiza.configured?
      = f.input :foreign_journal, collection: journals_for_select(@bank_account.foreign_journal, 'bank'), hint: 'si différent de "Code journal" ci-dessus', :input_html => { class: "form-select"}
    - else
      .form-group.clearfix
        .label-section
          %label= t('simple_form.labels.bank_account.journal')
        .control-section
          %select.select.form-select.disabled{ disabled: 'disabled' }
          %p
            = render 'shared/ibiza_not_configured_warning'
  - original_currency = @bank_account.original_currency.try(:[], "id")
  - if original_currency.present?
    = f.input :original_currency, as: :text, label: 'Devise originale', disabled: true, read_only: true, input_html: { value: original_currency, rows: 1 }
  = f.input :currency, collection: journal_currencies, include_blank: false, label: 'Devise de conversion', selected: (@bank_account.currency || "EUR"), hint: "Les écritures seront converties vers cette devise avec le taux de change de la date de valeur", :input_html => { class: "form-select"}
  = f.input :accounting_number, required: true
  = f.input :temporary_account, required: true, hint: 'si tiers non identifiable'
  .form-group.clearfix{ class: ('error' if @bank_account.errors.keys.include?(:start_date)) }
    .label-section
      = label_tag 'bank_account[start_date]', content_tag(:abbr, '*', title: 'champ requis') + " Choisir la date de récupération de l'historique bancaire"
    .control-section
      .input-prepend.date.datepicker
        = text_field_tag @bank_account.start_date.present? ? 'bank_account[start_date_disabled]' : 'bank_account[start_date]', @bank_account.start_date, { class: 'singledate', disabled: @bank_account.start_date.present?, required: true }
        - if @bank_account.start_date.present?
          = hidden_field_tag 'bank_account[start_date]', @bank_account.start_date
      - if @bank_account.operations.count >= 1
        %p.help-block L'opération bancaire la plus ancienne remontée par l'automate date du #{@bank_account.operations.order(date: :asc).first.date.strftime("%d/%m/%Y")}
  - if @customer.organization.cedricom_configured?
    .form-group.clearfix{ class: ('error' if @bank_account.errors.keys.include?(:ebics_enabled_starting)) }
      .label-section
        = label_tag 'bank_account[ebics_enabled_starting]'," Activer la récuparation EBICS à compter du"
      .control-section
        .input-prepend.date.datepicker
          = text_field_tag @bank_account.ebics_enabled_starting.present? ? 'bank_account[ebics_enabled_starting_disabled]' : 'bank_account[ebics_enabled_starting]', @bank_account.ebics_enabled_starting, { class: 'singledate', disabled: @bank_account.ebics_enabled_starting.present? }
          - if @bank_account.ebics_enabled_starting.present?
            = hidden_field_tag 'bank_account[ebics_enabled_starting]', @bank_account.ebics_enabled_starting
        - if @bank_account.operations.count >= 1
          %p.help-block L'opération bancaire la plus ancienne remontée par l'automate date du #{@bank_account.operations.order(date: :asc).first.date.strftime("%d/%m/%Y")}
    - if @bank_account.cedricom_mandate_state.in?(["CREE", "TELECHARGE"])
      = f.input :cedricom_signed_mandate
  = f.input :lock_old_operation, hint: "Ne s'applique qu'après un mois depuis la création de ce compte bancaire dans iDocus", input_html: { class: 'form-check-input m-2' }, wrapper: :inline_checkbox
  = f.input :permitted_late_days, required: true
