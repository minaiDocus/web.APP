- software_name = Interfaces::Software::Configuration::SOFTWARES_HUMAN_NAME[software.to_sym]

.derivationRight
  %h5.modal-title.bold= "Configuration #{ software_name }"
  = simple_form_for @organization, url: update_software_path(@organization.id, software), method: :post, html: { id: "#{software}_form", class: 'form form-horizontal margin0'  } do |f|
    = f.simple_fields_for "#{software}_attributes".to_sym do |sf|
      .form-group.row
        .col-md-11
          = sf.label :is_used, t("activerecord.models.software_#{software}.attributes.is_used"), class: 'semibold'
          %br
          = sf.hint "Cette option permet de selectionner/utiliser #{software_name} dans le paramétrage dossier client"
        .col-md-1.form-check.form-switch.custom-form-switch
          = sf.input :is_used, as: :boolean, label: 'Oui?', label_html: { class: 'form-check-label' }, input_html: { checked: @organization.send(software.to_sym).try(:used?), id: 'flexSwitchCheckDefault', class: 'form-check-input'}
      .form-group.row{ class: (['exact_online', 'my_unisoft'].include? software)? '' : 'hide' }
        .col-md-11
          = sf.label :auto_deliver, t("activerecord.models.software_#{software}.attributes.auto_deliver"), class: 'semibold'
          %br
          = sf.hint 'Cette option peut être écrasée dans le paramétrage dossier client'
        .col-md-1.form-check.form-switch.custom-form-switch
          = sf.input :auto_deliver, as: :boolean, label: 'Oui?', label_html: { class: 'form-check-label' }, input_html: { checked: @organization.send(software.to_sym).try(:auto_deliver?), id: 'flexSwitchCheckDefault', class: 'form-check-input'}

    .row
      .col-md-12
        .card
          .card-header
            %h3 Utilisateurs
          .card-body.clearfix
            .form-group
              .label-section
                = label_tag 'software_account_list', "Liste des clients assignés à l'option:", class: 'select control-label'
              .control-section
                -list_options = @organization.customers.active.order(:code).filter_by_software(software).compact
                -list_selected = list_options.select{ |c| c.uses?(software.to_sym) }
                = select_tag 'software_account_list', options_for_select(list_options, list_selected), include_blank: false, multiple: true, class: 'searchable-option-list'

    - if @user.leader?
      .w-100.text-end
        - if software == 'csv_descriptor'
          %a.btn.btn-secondary#csv-descriptor-format{ href: '#', data: { organization_id: @organization.id } } Modifier le format
        = f.submit t('actions.submit'), class: 'btn btn-primary'


- if software == 'csv_descriptor'
  .modal#csv_descriptor_modal 
    .modal-dialog{ style: 'min-width: 1340px'}
      .modal-content
        .modal-header
          %h5.modal-title.bold Fomat CSV personnalisable
          %button.btn-close{'aria-label' => 'Close', 'data-bs-dismiss' => 'modal', :type => 'button'}
        .modal-body
          #edit_csv_descriptor_format
        .modal-footer
          .w-100.text-end
            - idocus_params = param_encode({ url: "/organizations/#{@organization.id}/csv_descriptor/update", method: 'patch', form: 'edit_format_csv_descriptor', before_send: 'csv_descriptor_update_format', modal: { id: 'csv_descriptor_modal' } })
            %button.btn.btn-primary.valid.as_idocus_ajax{ idocus: idocus_params } Valider
